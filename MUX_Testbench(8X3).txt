
--------------------------------------------------------------------------------
-- Company: 
-- Engineer:
--
-- Create Date:   22:16:32 11/22/2024
-- Design Name:   mux_3_8_module
-- Module Name:   C:/Xilinx92i/mux_3_8/mux_3_8_Testbench.vhd
-- Project Name:  mux_3_8
-- Target Device:  
-- Tool versions:  
-- Description:   
-- 
-- VHDL Test Bench Created by ISE for module: mux_3_8_module
--
-- Dependencies:
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Notes: 
-- This testbench has been automatically generated using types std_logic and
-- std_logic_vector for the ports of the unit under test.  Xilinx recommends 
-- that these types always be used for the top-level I/O of a design in order 
-- to guarantee that the testbench will bind correctly to the post-implementation 
-- simulation model.
--------------------------------------------------------------------------------
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_unsigned.all;
USE ieee.numeric_std.ALL;

ENTITY mux_3_8_Testbench_vhd IS
END mux_3_8_Testbench_vhd;

ARCHITECTURE behavior OF mux_3_8_Testbench_vhd IS 

	-- Component Declaration for the Unit Under Test (UUT)
	COMPONENT mux_3_8_module
	PORT(
		I0 : IN std_logic;
		I1 : IN std_logic;
		I2 : IN std_logic;
		I3 : IN std_logic;
		I4 : IN std_logic;
		I5 : IN std_logic;
		I6 : IN std_logic;
		I7 : IN std_logic;
		S : IN std_logic_vector(2 downto 0);          
		I : OUT std_logic
		);
	END COMPONENT;

	--Inputs
	SIGNAL I0 :  std_logic := '0';
	SIGNAL I1 :  std_logic := '0';
	SIGNAL I2 :  std_logic := '0';
	SIGNAL I3 :  std_logic := '0';
	SIGNAL I4 :  std_logic := '0';
	SIGNAL I5 :  std_logic := '0';
	SIGNAL I6 :  std_logic := '0';
	SIGNAL I7 :  std_logic := '0';
	SIGNAL S :  std_logic_vector(2 downto 0) := (others=>'0');

	--Outputs
	SIGNAL I :  std_logic;

BEGIN

	-- Instantiate the Unit Under Test (UUT)
	uut: mux_3_8_module PORT MAP(
		I0 => I0,
		I1 => I1,
		I2 => I2,
		I3 => I3,
		I4 => I4,
		I5 => I5,
		I6 => I6,
		I7 => I7,
		S => S,
		I => I
	);

	tb : PROCESS
	BEGIN

		I0 <= '1';
		I1 <= '1';
		I2 <= '0';
		I3 <= '0';
		I4 <= '1';
		I5 <= '0';
		I6 <= '1';
		I7 <= '0';
		
		S <= "000";
		wait for 100 ns;
		S <= "001";
		wait for 100 ns;
		S <= "010";
		wait for 100 ns;
		S <= "011";
		wait for 100 ns;
		S <= "100";
		wait for 100 ns;
		S <= "101";
		wait for 100 ns;
		S <= "110";
		wait for 100 ns;
		S <= "111";
		wait for 100 ns;

		wait; -- will wait forever
	END PROCESS;

END;
